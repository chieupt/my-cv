{"remainingRequest":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\src\\components\\ResumeComponent.vue?vue&type=template&id=62647950&","dependencies":[{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\src\\components\\ResumeComponent.vue","mtime":1608618995995},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}