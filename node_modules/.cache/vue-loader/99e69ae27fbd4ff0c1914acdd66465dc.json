{"remainingRequest":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\src\\components\\SkillComponent.vue?vue&type=template&id=885d5448&scoped=true&","dependencies":[{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\src\\components\\SkillComponent.vue","mtime":1608522768052},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}