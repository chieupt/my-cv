{"remainingRequest":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\src\\components\\ExperienceComponent.vue?vue&type=template&id=b122c19a&scoped=true&","dependencies":[{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\src\\components\\ExperienceComponent.vue","mtime":1608521803768},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chieupt\\Documents\\GitHub\\MyCV\\my-cv\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}